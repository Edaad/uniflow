{"ast":null,"code":"var _jsxFileName = \"/Users/edaad/Desktop/Projects/uniflow/client/src/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  // Handle file selection\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n\n  // Handle file upload and storage\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage(\"No file selected\");\n      return;\n    }\n\n    // Use FileReader to read the file as a data URL (for localStorage)\n    const reader = new FileReader();\n    reader.onload = () => {\n      const fileData = reader.result;\n      localStorage.setItem(\"uploadedFile\", fileData);\n      setMessage(\"File successfully uploaded and saved in local storage!\");\n    };\n    reader.onerror = () => {\n      setMessage(\"Failed to read file\");\n    };\n    reader.readAsDataURL(file); // Store file as base64-encoded data URL\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"90rxx89DAeVfO1aRLt0hivI8MC0=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","message","setMessage","handleFileChange","e","selectedFile","target","files","handleUpload","reader","FileReader","onload","fileData","result","localStorage","setItem","onerror","readAsDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/edaad/Desktop/Projects/uniflow/client/src/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst FileUpload = () => {\n    const [file, setFile] = useState(null);\n    const [message, setMessage] = useState(\"\");\n\n    // Handle file selection\n    const handleFileChange = (e) => {\n        const selectedFile = e.target.files[0];\n        setFile(selectedFile);\n    };\n\n    // Handle file upload and storage\n    const handleUpload = async () => {\n        if (!file) {\n            setMessage(\"No file selected\");\n            return;\n        }\n\n        // Use FileReader to read the file as a data URL (for localStorage)\n        const reader = new FileReader();\n        reader.onload = () => {\n            const fileData = reader.result;\n            localStorage.setItem(\"uploadedFile\", fileData);\n            setMessage(\"File successfully uploaded and saved in local storage!\");\n        };\n        reader.onerror = () => {\n            setMessage(\"Failed to read file\");\n        };\n        reader.readAsDataURL(file); // Store file as base64-encoded data URL\n    };\n\n    return (\n        <div>\n            <h2>File Upload</h2>\n            <input type=\"file\" onChange={handleFileChange} />\n            <button onClick={handleUpload}>Upload</button>\n            {message && <p>{message}</p>}\n        </div>\n    );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCP,OAAO,CAACK,YAAY,CAAC;EACzB,CAAC;;EAED;EACA,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACT,IAAI,EAAE;MACPG,UAAU,CAAC,kBAAkB,CAAC;MAC9B;IACJ;;IAEA;IACA,MAAMO,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;MAClB,MAAMC,QAAQ,GAAGH,MAAM,CAACI,MAAM;MAC9BC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,QAAQ,CAAC;MAC9CV,UAAU,CAAC,wDAAwD,CAAC;IACxE,CAAC;IACDO,MAAM,CAACO,OAAO,GAAG,MAAM;MACnBd,UAAU,CAAC,qBAAqB,CAAC;IACrC,CAAC;IACDO,MAAM,CAACQ,aAAa,CAAClB,IAAI,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACIH,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAErB;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD1B,OAAA;MAAQ6B,OAAO,EAAEjB,YAAa;MAAAU,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CrB,OAAO,iBAAIL,OAAA;MAAAsB,QAAA,EAAIjB;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAACxB,EAAA,CAtCID,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}